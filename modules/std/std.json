{
  "module":{
    "name":"std"
    ,"namespaces":[
      {
        "ident":"time"
        ,"classes":[
          {
            "ident":"Time"
            ,"docs":"<p>DateTime class.</p>\n"
            ,"flags":1
            ,"superType":"monkey.Object"
            ,"constants":[
              {
                "ident":"_days"
                ,"flags":2
                ,"type":"monkey.String[]"
              }
              ,{
                "ident":"_months"
                ,"flags":2
                ,"type":"monkey.String[]"
              }
            ]
            ,"fields":[
              {
                "ident":"_timer"
                ,"flags":2
                ,"type":"libc.time_t"
              }
              ,{
                "ident":"_tm"
                ,"flags":2
                ,"type":"libc.tm_t"
              }
            ]
            ,"constructors":[
              {
                "ident":"new"
                ,"overloads":[
                  {
                    "params":[
                      {
                        "ident":"timer"
                        ,"flags":1
                        ,"type":"libc.time_t"
                      }
                      ,{
                        "ident":"tm"
                        ,"flags":1
                        ,"type":"libc.tm_t Ptr"
                      }
                    ]
                  }
                ]
              }
            ]
            ,"properties":[
              {
                "ident":"Day"
                ,"docs":"<p>Day of the month (1-31)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"DaylightSavings"
                ,"docs":"<p>True if daylight savings is in effect.</p>\n"
                ,"flags":1
                ,"type":"monkey.Bool"
              }
              ,{
                "ident":"Hours"
                ,"docs":"<p>Hours since midnight (0-23)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"Minutes"
                ,"docs":"<p>Minutes (0-59)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"Month"
                ,"docs":"<p>Month since January (0-11)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"Seconds"
                ,"docs":"<p>Seconds (0-61)</p>\n\n<pre><code>May include &#39;leap&#39; seconds.\n</code></pre>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"WeekDay"
                ,"docs":"<p>Week day since Sunday (0-6)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"Year"
                ,"docs":"<p>Year</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
              ,{
                "ident":"YearDay"
                ,"docs":"<p>Days since January 1 (0-365)</p>\n"
                ,"flags":1
                ,"type":"monkey.Int"
              }
            ]
            ,"operators":[
              {
                "ident":"<=>"
                ,"docs":"<p>Overloaded compare operator.</p>\n\n<pre><code>Time x is &#39;less than&#39; time y if time x represents a time &#39;earlier&#39; than time y.\n</code></pre>\n"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                    ,"params":[
                      {
                        "ident":"time"
                        ,"flags":1
                        ,"type":"std.time.Time"
                      }
                    ]
                  }
                ]
              }
            ]
            ,"methods":[
              {
                "ident":"<=>"
                ,"docs":"<p>Overloaded compare operator.</p>\n\n<pre><code>Time x is &#39;less than&#39; time y if time x represents a time &#39;earlier&#39; than time y.\n</code></pre>\n"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                    ,"params":[
                      {
                        "ident":"time"
                        ,"flags":1
                        ,"type":"std.time.Time"
                      }
                    ]
                  }
                ]
              }
              ,{
                "ident":"Day"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                  }
                ]
              }
              ,{
                "ident":"DaylightSavings"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Bool"
                    }
                  }
                ]
              }
              ,{
                "ident":"Hours"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                  }
                ]
              }
              ,{
                "ident":"Minutes"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                  }
                ]
              }
              ,{
                "ident":"Month"
                ,"overloads":[
                  {
                    "return":{
                      "type":"monkey.Int"
                    }
                  }
                ]
              }
            ]
          }
        ]
        ,"functions":[
          {
            "ident":"Millisecs"
            ,"docs":"<p>Gets the number of milliseconds since the app started.</p>\n"
            ,"overloads":[
              {
                "return":{
                  "type":"monkey.Long"
                }
              }
            ]
          }
          ,{
            "ident":"Seconds"
            ,"docs":"<p>Gets the number of seconds since the app started.</p>\n"
            ,"overloads":[
              {
                "return":{
                  "type":"monkey.Double"
                }
              }
            ]
          }
        ]
      }
    ]
  }
}